# 워크플로의 이름
name: Backend CI/CD

# 이 워크플로가 실행될 조건: main 브랜치에 push가 발생했을 때
on:
  push:
    branches: [ "develop" ]
    # 백엔드 관련 파일이 변경되었을 때만 실행하려면 아래 경로를 지정합니다.
    # paths:
    #   - 'backend/**'

# 실행될 작업(Job)들
jobs:
  build-and-deploy:
    # 작업이 실행될 가상 환경
    runs-on: amazonlinux-2023

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Gradle로 빌드하기
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. 빌드된 .war 파일을 EC2로 전송
      - name: Copy .war file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/libs/*.war"
          target: "/home/${{ secrets.EC2_USERNAME }}/app"

      # 6. EC2에서 배포 스크립트 실행
      - name: Execute deployment script on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 배포 스크립트에 실행 권한 부여
            chmod +x /home/${{ secrets.EC2_USERNAME }}/app/deploy.sh
            # 배포 스크립트 실행
            sh /home/${{ secrets.EC2_USERNAME }}/app/deploy.sh