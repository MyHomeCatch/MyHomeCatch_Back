<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.auth.mapper.AuthMapper">

    <select id="findByEmail" resultType="org.scoula.user.domain.User">
        SELECT * FROM users
        WHERE email = #{email}
    </select>

    <select id="findByNickname" resultType="org.scoula.user.domain.User">
        SELECT *
        from users
        WHERE nickname = #{nickname};
    </select>

    <insert id="insertUser" parameterType="org.scoula.user.domain.User">
        INSERT INTO users (email, password, name, nickname, address, additional_point)
        VALUES (#{email}, #{password}, #{name}, #{nickname}, #{address}, #{additionalPoint})
    </insert>

    <delete id="deleteByEmail">
        DELETE FROM users WHERE email = #{email}
    </delete>

    <update id="updatePasswordByEmail">
        UPDATE users
        SET password = #{password}
        WHERE email = #{email}
    </update>

    <update id="update" parameterType="org.scoula.user.domain.User">
        UPDATE users
        SET
        nickname = #{nickname},
        address = #{address},
        <!-- password 필드는 변경되었을 때만 업데이트하도록 동적 SQL 고려 가능 -->
        <!-- 현재 MemberServiceImpl에서 이미 passwordEncoder.encode()를 거친 후 User 객체에 설정하므로, -->
        <!-- 여기서 바로 업데이트해도 무방합니다. -->
        password = #{password}
        WHERE email = #{email}
    </update>
</mapper>