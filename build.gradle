plugins {
    id 'java'
    id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
    springVersion = '5.3.37'
    lombokVersion = '1.18.30'
    springSecurityVersion = '5.8.13'
    springBootVersion = '2.7.13'
}

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // 스프링
    implementation ("org.springframework:spring-context:${springVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation 'javax.inject:javax.inject:1'

    // AOP
    implementation 'org.aspectj:aspectjrt:1.9.20'
    implementation 'org.aspectj:aspectjweaver:1.9.20'

    // JSP, SERVLET, JSTL
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly 'javax.servlet.jsp:jsp-api:2.1'
    implementation 'javax.servlet:jstl:1.2'

    // Log4j2 Logging - spring-boot-starter-logging 제외하고 직접 선언
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'

    // PreparedStatement SQL 처리 로그 (log4jdbc)
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'

    // xml내 한글 처리
    implementation 'xerces:xercesImpl:2.12.2'

    // 데이터베이스
    implementation 'com.mysql:mysql-connector-j:8.1.0'
    implementation 'com.zaxxer:HikariCP:2.7.4'
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation 'org.mybatis:mybatis:3.4.6'
    implementation 'org.mybatis:mybatis-spring:1.3.2'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Jackson - Json 처리 버전 통일
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.4'

    // 이미지 관련
    implementation "net.coobird:thumbnailator:0.4.20"
    implementation 'org.jsoup:jsoup:1.17.2'

    // 보안
    implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-core:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"

    // Google OAuth2
    implementation 'org.springframework.security:spring-security-oauth2-client:5.8.0'
    implementation 'org.springframework.security:spring-security-oauth2-core:5.8.0'

    // jwt
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"

    // 유효성 검사
    implementation 'org.hibernate.validator:hibernate-validator:6.2.5.Final'

    // Swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // HTTP Client
    implementation 'org.apache.httpcomponents:httpcore:4.4.15'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    // Spring context-support
    implementation 'org.springframework:spring-context-support:5.3.33'

    // Mail
    implementation 'javax.mail:mail:1.4.7'

    // ChatAI
    implementation ("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    // 테스트 관련 의존성
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.springframework:spring-test:${springVersion}"
    testImplementation 'org.mockito:mockito-core:4.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}



test {
    useJUnitPlatform()
}